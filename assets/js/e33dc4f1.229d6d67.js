"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[21756],{25528:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"guides/Getting-Started/Generating-Dungeon/Choose-Door","title":"Choose Door","description":"This function lets you choose a door actor to spawn between two rooms.\\\\","source":"@site/versioned_docs/version-3.4/guides/Getting-Started/Generating-Dungeon/Choose-Door.md","sourceDirName":"guides/Getting-Started/Generating-Dungeon","slug":"/guides/Choose-Door","permalink":"/ProceduralDungeon/3.4/guides/Choose-Door","draft":false,"unlisted":false,"tags":[],"version":"3.4","frontMatter":{"slug":"/guides/Choose-Door","pagination_prev":"guides/Getting-Started/Generating-Dungeon/Is-Valid-Dungeon","pagination_next":"guides/Getting-Started/Packaging"},"sidebar":"homeSidebar","previous":{"title":"Is Valid Dungeon","permalink":"/ProceduralDungeon/3.4/guides/Is-Valid-Dungeon"},"next":{"title":"Packaging your game with the plugin","permalink":"/ProceduralDungeon/3.4/guides/Packaging"}}');var t=r(74848),a=r(28453),s=r(11470),u=r(19365);const l={slug:"/guides/Choose-Door",pagination_prev:"guides/Getting-Started/Generating-Dungeon/Is-Valid-Dungeon",pagination_next:"guides/Getting-Started/Packaging"},i="Choose Door",c={},d=[];function p(e){const o={a:"a",br:"br",code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsx)(o.h1,{id:"choose-door",children:"Choose Door"})}),"\n","\n",(0,t.jsxs)(o.p,{children:["This function lets you choose a ",(0,t.jsx)(o.a,{href:"/ProceduralDungeon/3.4/guides/Door",children:"door actor"})," to spawn between two rooms.",(0,t.jsx)(o.br,{}),"\n","If you don't want a door between the rooms you just have to return ",(0,t.jsx)(o.code,{children:"none"}),"."]}),"\n",(0,t.jsxs)(o.p,{children:["You should use the ",(0,t.jsx)(o.a,{href:"/ProceduralDungeon/3.4/guides/Door-Types",children:(0,t.jsx)(o.code,{children:"Door Type"})})," input to return a door of the correct type if you use multiple door types in your project.",(0,t.jsx)(o.br,{}),"\n","You can check the door type of a door actor class with the function ",(0,t.jsx)(o.code,{children:"Is Door Of Type"}),"."]}),"\n",(0,t.jsxs)(o.p,{children:["You can use the ",(0,t.jsx)(o.code,{children:"Flipped"})," output to control which room the door faces.",(0,t.jsx)(o.br,{}),"\n","If false (default) the door forward will face the ",(0,t.jsx)(o.code,{children:"Current Room"}),".",(0,t.jsx)(o.br,{}),"\n","If true, the door forward will face the ",(0,t.jsx)(o.code,{children:"Next Room"}),"."]}),"\n",(0,t.jsx)(o.p,{children:'One of the room input can be null if there is no room connected to it.\r\nYou certainly want to set an always closed door, or a door actor that act as a "wall".'}),"\n",(0,t.jsx)(o.p,{children:"An example to spawn a simple door if both rooms are valid, or a wall if one of them is not valid (assuming there is only one door type):"}),"\n",(0,t.jsxs)(s.A,{groupId:"lang",queryString:!0,children:[(0,t.jsx)(u.A,{value:"bp",label:"Blueprint",default:!0,children:(0,t.jsx)(o.p,{children:(0,t.jsx)(o.img,{src:r(91545).A+"",width:"917",height:"473"})})}),(0,t.jsxs)(u.A,{value:"cpp",label:"C++",children:[(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-cpp",metastring:'title="MyDungeonGenerator.h"',children:'UCLASS()\r\nclass AMyDungeonGenerator : public ADungeonGenerator\r\n{\r\n    GENERATED_BODY()\r\npublic:\r\n    // ...\r\n\r\n    virtual TSubclassOf<ADoor> ChooseDoor_Implementation(const URoomData* CurrentRoom, const URoomData* NextRoom, const UDoorType* DoorType, bool& Flipped) override;\r\n\r\n    // The following variables are just for example purpose\r\n    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "My Dungeon")\r\n    TSubclassOf<ADoor> NormalDoor {nullptr};\r\n    \r\n    UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = "My Dungeon")\r\n    TSubclassOf<ADoor> Wall {nullptr};\r\n\r\n    // ...\r\n}\n'})}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-cpp",metastring:'title="MyDungeonGenerator.cpp"',children:"\r\nTSubclassOf<ADoor> AMyDungeonGenerator::ChooseDoor_Implementation(const URoomData* CurrentRoom, const URoomData* NextRoom, const UDoorType* DoorType, bool& Flipped)\r\n{\r\n    const bool bAreBothRoomValid = IsValid(CurrentRoom) && IsValid(NextRoom);\r\n    return (bAreBothRoomValid) ? NormalDoor : Wall;\r\n}\r\n\n"})})]})]})]})}function h(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},19365:(e,o,r)=>{r.d(o,{A:()=>s});r(96540);var n=r(34164);const t={tabItem:"tabItem_Ymn6"};var a=r(74848);function s({children:e,hidden:o,className:r}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(t.tabItem,r),hidden:o,children:e})}},11470:(e,o,r)=>{r.d(o,{A:()=>w});var n=r(96540),t=r(34164),a=r(23104),s=r(56347),u=r(205),l=r(57485),i=r(31682),c=r(70679);function d(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:o}=e;return!!o&&"object"==typeof o&&"value"in o}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:o,children:r}=e;return(0,n.useMemo)((()=>{const e=o??function(e){return d(e).map((({props:{value:e,label:o,attributes:r,default:n}})=>({value:e,label:o,attributes:r,default:n})))}(r);return function(e){const o=(0,i.XI)(e,((e,o)=>e.value===o.value));if(o.length>0)throw new Error(`Docusaurus error: Duplicate values "${o.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[o,r])}function h({value:e,tabValues:o}){return o.some((o=>o.value===e))}function g({queryString:e=!1,groupId:o}){const r=(0,s.W6)(),t=function({queryString:e=!1,groupId:o}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!o)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return o??null}({queryString:e,groupId:o});return[(0,l.aZ)(t),(0,n.useCallback)((e=>{if(!t)return;const o=new URLSearchParams(r.location.search);o.set(t,e),r.replace({...r.location,search:o.toString()})}),[t,r])]}function f(e){const{defaultValue:o,queryString:r=!1,groupId:t}=e,a=p(e),[s,l]=(0,n.useState)((()=>function({defaultValue:e,tabValues:o}){if(0===o.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:o}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${o.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=o.find((e=>e.default))??o[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:o,tabValues:a}))),[i,d]=g({queryString:r,groupId:t}),[f,m]=function({groupId:e}){const o=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,t]=(0,c.Dv)(o);return[r,(0,n.useCallback)((e=>{o&&t.set(e)}),[o,t])]}({groupId:t}),b=(()=>{const e=i??f;return h({value:e,tabValues:a})?e:null})();(0,u.A)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),m(e)}),[d,m,a]),tabValues:a}}var m=r(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var D=r(74848);function v({className:e,block:o,selectedValue:r,selectValue:n,tabValues:s}){const u=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),i=e=>{const o=e.currentTarget,t=u.indexOf(o),a=s[t].value;a!==r&&(l(o),n(a))},c=e=>{let o=null;switch(e.key){case"Enter":i(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;o=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;o=u[r]??u[u.length-1];break}}o?.focus()};return(0,D.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":o},e),children:s.map((({value:e,label:o,attributes:n})=>(0,D.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{u.push(e)},onKeyDown:c,onClick:i,...n,className:(0,t.A)("tabs__item",b.tabItem,n?.className,{"tabs__item--active":r===e}),children:o??e},e)))})}function x({lazy:e,children:o,selectedValue:r}){const a=(Array.isArray(o)?o:[o]).filter(Boolean);if(e){const e=a.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,D.jsx)("div",{className:"margin-top--md",children:a.map(((e,o)=>(0,n.cloneElement)(e,{key:o,hidden:e.props.value!==r})))})}function y(e){const o=f(e);return(0,D.jsxs)("div",{className:(0,t.A)("tabs-container",b.tabList),children:[(0,D.jsx)(v,{...o,...e}),(0,D.jsx)(x,{...o,...e})]})}function w(e){const o=(0,m.A)();return(0,D.jsx)(y,{...e,children:d(e.children)},String(o))}},91545:(e,o,r)=>{r.d(o,{A:()=>n});const n=r.p+"assets/images/ChooseDoor-7fc7c159a668a760be43c01f3166a200.jpg"},28453:(e,o,r)=>{r.d(o,{R:()=>s,x:()=>u});var n=r(96540);const t={},a=n.createContext(t);function s(e){const o=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function u(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),n.createElement(a.Provider,{value:o},e.children)}}}]);