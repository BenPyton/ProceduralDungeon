"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[48],{329:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>a,frontMatter:()=>s,metadata:()=>d,toc:()=>h});var n=t(4848),r=t(8453);const s={},o="Bounds Params",d={id:"api/BoundsParams/BoundsParams",title:"BoundsParams",description:"Procedural Dungeon >",source:"@site/docs/api/BoundsParams/BoundsParams.md",sourceDirName:"api/BoundsParams",slug:"/api/BoundsParams/",permalink:"/ProceduralDungeon/api/BoundsParams/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"Procedural Dungeon API",permalink:"/ProceduralDungeon/api/"},next:{title:"Door",permalink:"/ProceduralDungeon/api/Door/"}},l={},h=[{value:"Class Details",id:"class-details",level:2},{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2}];function c(e){const i={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," >\nBounds Params"]}),"\n",(0,n.jsx)(i.h1,{id:"bounds-params",children:"Bounds Params"}),"\n",(0,n.jsx)(i.h2,{id:"class-details",children:"Class Details"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Defined in:"})," ",(0,n.jsx)(i.code,{children:"Public/DungeonGenerator.h"}),(0,n.jsx)(i.br,{}),"\n",(0,n.jsx)(i.strong,{children:"Hierarchy:"})," ",(0,n.jsx)(i.em,{children:"Bounds Params"})]}),"\n",(0,n.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(i.p,{children:["Holds the settings for the dungeon limits.",(0,n.jsx)("br",{}),"These values are expressed in Room cells, and are based on the origin of the first room (0,0,0).",(0,n.jsx)("br",{}),"For example, if the first room is only 1 room cell (",(0,n.jsx)(i.code,{children:"FirstPoint = (0,0,0)"}),", ",(0,n.jsx)(i.code,{children:"SecondPoint = (1,1,1)"}),"), then  this is the cell (0,0,0).",(0,n.jsx)("br",{}),"If you set a ",(0,n.jsx)(i.code,{children:"MinY=2"})," et ",(0,n.jsx)(i.code,{children:"MaxY=2"}),", then on the Y axis the dungeon can go from the cell -2 to cell 2,",(0,n.jsx)("br",{}),"Making an effective range of 5 cells, centered on the first room."]}),"\n",(0,n.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Name"}),(0,n.jsx)(i.th,{children:"Type"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsxs)(i.tbody,{children:[(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Max X"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the X limit in positive axis (north from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Max Y"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the Y limit in positive axis (east from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Max Z"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the Z limit in positive axis (up from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Min X"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the X limit in negative axis (south from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Min Y"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the Y limit in negative axis (west from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Limit Min Z"}),(0,n.jsx)(i.td,{children:"bool"}),(0,n.jsx)(i.td,{children:"Enables the Z limit in negative axis (down from the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Max X"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The X positive limit (north) of the dungeon in room units (starting from the origin of the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Max Y"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The Y positive limit (east) of the dungeon in room units (starting from the origin of the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Max Z"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The Z positive limit (up) of the dungeon in room units (starting from the origin of the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Min X"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The X negative limit (south) of the dungeon in room units (starting from the origin of the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Min Y"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The Y negative limit (west) of the dungeon in room units (starting from the origin of the first room)."})]}),(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.td,{children:"Min Z"}),(0,n.jsx)(i.td,{children:"int32"}),(0,n.jsx)(i.td,{children:"The Z negative limit (down) of the dungeon in room units (starting from the origin of the first room)."})]})]})]})]})}function a(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>d});var n=t(6540);const r={},s=n.createContext(r);function o(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);