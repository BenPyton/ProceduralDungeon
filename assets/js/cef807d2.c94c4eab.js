"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[16472],{89341:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"guides/Continue-To-Add-Room","title":"Continue To Add Room","description":"This function determine if the generation should continue or not.","source":"@site/versioned_docs/version-3.3/guides/Continue-To-Add-Room.md","sourceDirName":"guides","slug":"/guides/Continue-To-Add-Room","permalink":"/ProceduralDungeon/3.3/guides/Continue-To-Add-Room","draft":false,"unlisted":false,"tags":[],"version":"3.3","frontMatter":{"pagination_prev":"guides/Choose-Next-Room-Data","pagination_next":"guides/Is-Valid-Dungeon"},"sidebar":"homeSidebar","previous":{"title":"Choose Next Room","permalink":"/ProceduralDungeon/3.3/guides/Choose-Next-Room-Data"},"next":{"title":"Is Valid Dungeon","permalink":"/ProceduralDungeon/3.3/guides/Is-Valid-Dungeon"}}');var i=o(74848),s=o(28453);const r={pagination_prev:"guides/Choose-Next-Room-Data",pagination_next:"guides/Is-Valid-Dungeon"},a="Continue To Add Room",d={},u=[];function c(e){const n={br:"br",h1:"h1",header:"header",img:"img",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"continue-to-add-room",children:"Continue To Add Room"})}),"\n",(0,i.jsx)(n.p,{children:"This function determine if the generation should continue or not."}),"\n",(0,i.jsxs)(n.p,{children:["A generation will naturally stops if there are no unconnected door left.",(0,i.jsx)(n.br,{}),"\n","But in most cases this is not happening and you have to stop the generation before it spawns too many rooms.",(0,i.jsx)(n.br,{}),"\n","So you have to return false in this function to stop the generation."]}),"\n",(0,i.jsx)(n.p,{children:"In output, you have to return true to continue the generation, or false to stop it."}),"\n",(0,i.jsxs)(n.p,{children:["Here an example where we let the generation ends naturally (",(0,i.jsx)(n.strong,{children:"be careful of infinite loop"}),"):"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:o(99954).A+"",width:"426",height:"140"})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},99954:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/ContinueAddingRoom-fa9c72c39ec382710919c982e8a4fb94.jpg"},28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(96540);const i={},s=t.createContext(i);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);