"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[33754],{71006:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"api/index","title":"API References","description":"Documentation for classes, enums, structs, nodes, etc.","source":"@site/versioned_docs/version-3.4/api/index.md","sourceDirName":"api","slug":"/api/","permalink":"/ProceduralDungeon/3.4/api/","draft":false,"unlisted":false,"tags":[],"version":"3.4","frontMatter":{"title":"API References","description":"Documentation for classes, enums, structs, nodes, etc.","sidebar_class_name":"hidden","pagination_prev":null,"pagination_next":null},"sidebar":"homeSidebar"}');var d=r(74848),t=r(28453);const i={title:"API References",description:"Documentation for classes, enums, structs, nodes, etc.",sidebar_class_name:"hidden",pagination_prev:null,pagination_next:null},l="Procedural Dungeon API",o={},a=[{value:"Classes",id:"classes",level:2},{value:"Structs",id:"structs",level:2},{value:"Enums",id:"enums",level:2}];function c(e){const s={a:"a",h1:"h1",h2:"h2",header:"header",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"procedural-dungeon-api",children:"Procedural Dungeon API"})}),"\n",(0,d.jsx)(s.h2,{id:"classes",children:"Classes"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Category"}),(0,d.jsx)(s.th,{children:"Exposed As"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/Door/",children:"Door"})}),(0,d.jsx)(s.td,{children:"Procedural"}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/DoorType/",children:"Door Type"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/DungeonBlueprintLibrary/",children:"Dungeon Blueprint Library"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/DungeonGenerator/",children:"Dungeon Generator"})}),(0,d.jsx)(s.td,{children:"Procedural"}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{children:"This is the main actor of the plugin. The dungeon generator is responsible to generate dungeons and replicate them over the network."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/DungeonGeneratorBase/",children:"Dungeon Generator Base"})}),(0,d.jsx)(s.td,{children:"Procedural"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{children:"This is the main actor of the plugin. The dungeon generator is responsible to generate dungeons and replicate them over the network."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/DungeonGraph/",children:"Dungeon Graph"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsxs)(s.td,{children:["Holds the generated dungeon.",(0,d.jsx)("br",{}),"You can access the rooms using many functions."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/ProceduralDungeonSettings/",children:"Procedural Dungeon Settings"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"Holds the plugin's settings."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/ReadOnlyRoom/",children:"Read Only Room"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"Allow access to only some members of Room instances during the generation process."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/ReplicableObject/",children:"Replicable Object"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/Room/",children:"Room"})}),(0,d.jsx)(s.td,{}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{children:"The room instances of the dungeon."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomCustomData/",children:"Room Custom Data"})}),(0,d.jsx)(s.td,{}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{children:"Base class for user custom data embedded in room instances"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomData/",children:"Room Data"})}),(0,d.jsx)(s.td,{}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomLevel/",children:"Room Level"})}),(0,d.jsx)(s.td,{children:"Procedural"}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomObserverComponent/",children:"Room Observer Component"})}),(0,d.jsx)(s.td,{children:"ProceduralDungeon"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsxs)(s.td,{children:["Room Observer that auto-(un)bind itself when it enters/exits a dungeon room.",(0,d.jsx)("br",{}),"Could observe (be bound) multiple rooms at once if the actor overlaps multiple room.",(0,d.jsx)("br",{}),"This component ",(0,d.jsx)(s.strong,{children:"does"})," track its own Room, thus the actor can move between rooms (use StaticRoomObserverComponent instead if this behavior is not needed)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomVisibilityComponent/",children:"Room Visibility"})}),(0,d.jsx)(s.td,{children:"ProceduralDungeon"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/StaticRoomVisibilityComponent/",children:"Room Visibility (Static)"})}),(0,d.jsx)(s.td,{children:"ProceduralDungeon"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/RoomVisitor/",children:"Room Visitor"})}),(0,d.jsx)(s.td,{}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/StaticRoomObserverComponent/",children:"Static Room Observer Component"})}),(0,d.jsx)(s.td,{children:"ProceduralDungeon"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsxs)(s.td,{children:["Room Observer that auto-(un)bind itself at BeginPlay and EndPlay.",(0,d.jsx)("br",{}),"This component will bind to the level it belongs to. So it needs to be placed directly in the Room map.",(0,d.jsx)("br",{}),"This component does ",(0,d.jsx)(s.strong,{children:"not"})," track its own Room, thus the actor should not move between rooms (use RoomObserverComponent instead)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/TriggerDoor/",children:"Trigger Door"})}),(0,d.jsx)(s.td,{}),(0,d.jsxs)(s.td,{children:["Blueprint\xa0Base\xa0Class",(0,d.jsx)("br",{}),"Variable\xa0Type"]}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Classes/TriggerType/",children:"Trigger Type"})}),(0,d.jsx)(s.td,{children:"Custom"}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"structs",children:"Structs"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Exposed As"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Structs/BoundsParams/",children:"Bounds Params"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{children:"Holds the settings for the dungeon limits."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Structs/DoorDef/",children:"Door Def"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"enums",children:"Enums"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Name"}),(0,d.jsx)(s.th,{children:"Exposed As"}),(0,d.jsx)(s.th,{children:"Description"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Enums/EDoorDirection/",children:"Door Direction"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Enums/EGenerationType/",children:"Generation Type"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Enums/EVisibilityMode/",children:"Room Visibility"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{children:"Visibility mode for Room Visibilty Components."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:"C++"}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.a,{href:"/ProceduralDungeon/3.4/api/Enums/ESeedType/",children:"Seed Type"})}),(0,d.jsx)(s.td,{children:"Variable\xa0Type"}),(0,d.jsx)(s.td,{})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},28453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>l});var n=r(96540);const d={},t=n.createContext(d);function i(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);