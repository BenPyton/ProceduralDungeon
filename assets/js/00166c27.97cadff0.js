"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[1382],{2413:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var n=t(4848),o=t(8453);const s={},i="Procedural Dungeon Settings",d={id:"api/ProceduralDungeonSettings/ProceduralDungeonSettings",title:"ProceduralDungeonSettings",description:"Procedural Dungeon >",source:"@site/docs/api/ProceduralDungeonSettings/ProceduralDungeonSettings.md",sourceDirName:"api/ProceduralDungeonSettings",slug:"/api/ProceduralDungeonSettings/",permalink:"/ProceduralDungeon/api/ProceduralDungeonSettings/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"EVisibilityMode",permalink:"/ProceduralDungeon/api/EVisibilityMode/"},next:{title:"ReplicableObject",permalink:"/ProceduralDungeon/api/ReplicableObject/"}},l={},c=[{value:"Class Details",id:"class-details",level:2},{value:"Description",id:"description",level:2},{value:"Properties",id:"properties",level:2}];function h(e){const r={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," >\nProcedural Dungeon Settings"]}),"\n",(0,n.jsx)(r.h1,{id:"procedural-dungeon-settings",children:"Procedural Dungeon Settings"}),"\n",(0,n.jsx)(r.h2,{id:"class-details",children:"Class Details"}),"\n",(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.strong,{children:"Defined in:"})," ",(0,n.jsx)(r.code,{children:"Public/ProceduralDungeonSettings.h"}),(0,n.jsx)(r.br,{}),"\n",(0,n.jsx)(r.strong,{children:"Hierarchy:"})," ",(0,n.jsx)(r.em,{children:"Object > Procedural Dungeon Settings"})]}),"\n",(0,n.jsx)(r.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(r.p,{children:"Holds the plugin's settings."}),"\n",(0,n.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Name"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Can Loop"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsxs)(r.td,{children:["When true, doors will be connected as long they are at the same place.",(0,n.jsx)("br",{}),"When false, only the doors between the previous and the new generated room will be connected.",(0,n.jsx)("br",{}),"DEPRECATED: Keep it true and use the CanLoop setting in the DungeonGenerator actor instead. This project-wide setting will be removed in a future version."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Default Door Size"}),(0,n.jsx)(r.td,{children:"FVector"}),(0,n.jsx)(r.td,{children:'The bounding size of the doors. It is used only to display the door\'s blue box when "Draw Debug" is set to true.'})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Door Arrow Head Size"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"Size of the door's debug arrow head."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Door Arrow Length"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"Length of the door's debug arrow."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Door Offset"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"The height of the door's base from the room's base (in percentage of the room unit Z)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Draw Debug"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsx)(r.td,{children:"Show room and door outlines in editor and development builds"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Enable Occlusion Culling"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsx)(r.td,{children:"The rooms visibility will be toggled off when the player is not inside it or in a room next to it."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Flip Door Arrow Side"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsxs)(r.td,{children:["Flip side the arrow that shows door facing direction.",(0,n.jsx)("br",{}),"True means that the arrow gets inside the room (opposite of door actor's forward).",(0,n.jsx)("br",{}),"False means that the arrow goes outside the room (same as door actor's forward)."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Max Generation Try"}),(0,n.jsx)(r.td,{children:"int32"}),(0,n.jsx)(r.td,{children:"The number of dungeon generation retry before the generator gives up."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Max Room Placement Try"}),(0,n.jsx)(r.td,{children:"int32"}),(0,n.jsx)(r.td,{children:"The number of room placement retry on a specific door before the generator gives up and continues with the next door."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Occlude Dynamic Actors"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsxs)(r.td,{children:["Keep track of dynamic actors entering and leaving the room to be able to show/hide them with the room.",(0,n.jsx)("br",{}),"TODO: Still useful? It was there for performance issues, but there is none anymore...",(0,n.jsx)("br",{}),"Maybe moving it in a console variable only for debug purpose?"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Occlusion Distance"}),(0,n.jsx)(r.td,{children:"int32"}),(0,n.jsx)(r.td,{children:"Defines how many connected rooms are visible from the player's room (1 means only the room where the player is)."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"On Screen Print Debug"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsx)(r.td,{children:"Show some logs on the screen"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Print Debug Duration"}),(0,n.jsx)(r.td,{children:"float"}),(0,n.jsx)(r.td,{children:"Duration of the screen logs"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Room Object Type"}),(0,n.jsx)(r.td,{children:"TEnumAsByte<ECollisionChannel>"}),(0,n.jsxs)(r.td,{children:["The object type used for the dungeon rooms trigger boxes.",(0,n.jsx)("br",{}),"Defaulted to Engine Trace Channel 6.",(0,n.jsx)("br",{}),"You can create new ones in your project settings under the Collision tab."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Room Unit"}),(0,n.jsx)(r.td,{children:"FVector"}),(0,n.jsxs)(r.td,{children:["Size of a room unit. Room's size in data assets will express the multiple of this unit size.",(0,n.jsx)("br",{}),"For example a room size of (5, 10, 1) with a unit size of (100, 100, 400) will result of a real room size of (500, 1000, 400)."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"Show Room Origin"}),(0,n.jsx)(r.td,{children:"bool"}),(0,n.jsxs)(r.td,{children:["Show the room origin in magenta",(0,n.jsx)("br",{}),"DEPRECATED: This setting will be removed in a future release of the plugin."]})]})]})]})]})}function a(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>d});var n=t(6540);const o={},s=n.createContext(o);function i(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);