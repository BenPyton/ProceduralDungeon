"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[51041],{73286:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/Classes/DungeonBlueprintLibrary/Nodes/Dungeon_InverseTransformPosition/Dungeon_InverseTransformPosition","title":"Dungeon_InverseTransformPosition","description":"Procedural Dungeon \u23f5","source":"@site/docs/api/Classes/DungeonBlueprintLibrary/Nodes/Dungeon_InverseTransformPosition/Dungeon_InverseTransformPosition.md","sourceDirName":"api/Classes/DungeonBlueprintLibrary/Nodes/Dungeon_InverseTransformPosition","slug":"/api/DungeonBlueprintLibrary/Dungeon_InverseTransformPosition","permalink":"/ProceduralDungeon/api/DungeonBlueprintLibrary/Dungeon_InverseTransformPosition","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"slug":"/api/DungeonBlueprintLibrary/Dungeon_InverseTransformPosition","pagination_prev":null,"pagination_next":null},"sidebar":"homeSidebar"}');var o=r(74848),t=r(28453);const i={slug:"/api/DungeonBlueprintLibrary/Dungeon_InverseTransformPosition",pagination_prev:null,pagination_next:null},a="Inverse Transform Position (Dungeon)",c={},d=[{value:"Description",id:"description",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}];function l(n){const e={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," \u23f5\r\n",(0,o.jsx)(e.a,{href:"/ProceduralDungeon/api/Classes/DungeonBlueprintLibrary/",children:"Dungeon Blueprint Library"})," \u23f5\r\nInverse Transform Position (Dungeon)"]}),"\n",(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"inverse-transform-position-dungeon",children:"Inverse Transform Position (Dungeon)"})}),"\n",(0,o.jsxs)(e.p,{children:[(0,o.jsx)(e.strong,{children:"Class:"})," ",(0,o.jsx)(e.a,{href:"/ProceduralDungeon/api/Classes/DungeonBlueprintLibrary/",children:"Dungeon\xa0Blueprint\xa0Library"}),(0,o.jsx)(e.br,{}),"\n",(0,o.jsx)(e.strong,{children:"Category:"})," Math\xa0\u2192\xa0\xa0Dungeon"]}),"\n",(0,o.jsx)(e.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(e.p,{children:"Inverse transform a cell position from the dungeon coordinates into a local coordinates"}),"\n",(0,o.jsx)(e.p,{children:"Node"}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{src:r(17087).A+"",width:"363",height:"148"})}),"\n",(0,o.jsx)(e.p,{children:"C++"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-cpp",children:"FIntVector Dungeon_InverseTransformPosition(const FIntVector& DungeonPos, const FIntVector& Translation, const EDoorDirection& Rotation)\n"})}),"\n",(0,o.jsx)(e.h2,{id:"inputs",children:"Inputs"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Name"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsxs)(e.tbody,{children:[(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"Dungeon Pos"}),(0,o.jsx)(e.td,{children:"Int Vector Structure (by ref)"}),(0,o.jsx)(e.td,{})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"Translation"}),(0,o.jsx)(e.td,{children:"Int Vector Structure (by ref)"}),(0,o.jsx)(e.td,{})]}),(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"Rotation"}),(0,o.jsx)(e.td,{children:"EDoorDirection Enum (by ref)"}),(0,o.jsx)(e.td,{})]})]})]}),"\n",(0,o.jsx)(e.h2,{id:"outputs",children:"Outputs"}),"\n",(0,o.jsxs)(e.table,{children:[(0,o.jsx)(e.thead,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.th,{children:"Name"}),(0,o.jsx)(e.th,{children:"Type"}),(0,o.jsx)(e.th,{children:"Description"})]})}),(0,o.jsx)(e.tbody,{children:(0,o.jsxs)(e.tr,{children:[(0,o.jsx)(e.td,{children:"Return Value"}),(0,o.jsx)(e.td,{children:"Int Vector Structure"}),(0,o.jsx)(e.td,{children:"Inverse transform a cell position from the dungeon coordinates into a local coordinates"})]})})]})]})}function u(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},17087:(n,e,r)=>{r.d(e,{A:()=>s});const s=r.p+"assets/images/nd_img_Dungeon_InverseTransformPosition-ee19ff51cbfba5fc8c0184677d7ff851.png"},28453:(n,e,r)=>{r.d(e,{R:()=>i,x:()=>a});var s=r(96540);const o={},t=s.createContext(o);function i(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:i(n.components),s.createElement(t.Provider,{value:e},n.children)}}}]);