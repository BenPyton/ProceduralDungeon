"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[9922],{950:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(4848),t=n(8453);const s={},o="Dungeon Blueprint Library",l={id:"api/Classes/DungeonBlueprintLibrary/DungeonBlueprintLibrary",title:"DungeonBlueprintLibrary",description:"Procedural Dungeon \u23f5",source:"@site/docs/api/Classes/DungeonBlueprintLibrary/DungeonBlueprintLibrary.md",sourceDirName:"api/Classes/DungeonBlueprintLibrary",slug:"/api/Classes/DungeonBlueprintLibrary/",permalink:"/ProceduralDungeon/api/Classes/DungeonBlueprintLibrary/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"homeSidebar",previous:{title:"DoorType",permalink:"/ProceduralDungeon/api/Classes/DoorType/"},next:{title:"CompareDataTableRows",permalink:"/ProceduralDungeon/api/DungeonBlueprintLibrary/CompareDataTableRows"}},d={},c=[{value:"Class Details",id:"class-details",level:2},{value:"Nodes",id:"nodes",level:2}];function a(e){const r={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," \u23f5\nDungeon Blueprint Library"]}),"\n",(0,i.jsx)(r.h1,{id:"dungeon-blueprint-library",children:"Dungeon Blueprint Library"}),"\n",(0,i.jsx)(r.h2,{id:"class-details",children:"Class Details"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Defined in:"})," ",(0,i.jsx)(r.code,{children:"Public/DungeonBlueprintLibrary.h"}),(0,i.jsx)(r.br,{}),"\n",(0,i.jsx)(r.strong,{children:"Hierarchy:"})," ",(0,i.jsx)(r.em,{children:"Object \u2192 Blueprint Function Library \u2192 Dungeon Blueprint Library"})]}),"\n",(0,i.jsx)(r.h2,{id:"nodes",children:"Nodes"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Name"}),(0,i.jsx)(r.th,{children:"Category"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Decrement",children:"Decrement Door Direction"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Decrement the direction and set it"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Add",children:"Direction + Direction"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Addition (A + B)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Sub",children:"Direction - Direction"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Subtraction (A - B)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Increment",children:"Increment Door Direction"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Increment the direction and set it"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Valid",children:"Is Valid"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsxs)(r.td,{children:["True if the value is set (either North, South, East, West)",(0,i.jsx)("br",{}),"False otherwise"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Negate",children:"Negate Door Direction"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Negate the direction and set it (same as North - Direction)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/DoorDirection_Opposite",children:"Opposite"})}),(0,i.jsxs)(r.td,{children:["Math\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Door\xa0Direction"]}),(0,i.jsx)(r.td,{children:"Transforms North into South and East into West (and vice versa)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Spectate",children:"Spectate"})}),(0,i.jsx)(r.td,{children:"Player"}),(0,i.jsx)(r.td,{children:"Set player to spectate"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_SetOcclusionCulling",children:"Enable Occlusion Culling"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Enable/disable the plugin's occlusion system"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_DefaultDoorSize",children:"Get Default Door Size"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns the default door type's size"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_DoorOffset",children:"Get Door Offset"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns the room offset as a percentage of the height of a room unit"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_OcclusionDistance",children:"Get Occlusion Culling Distance"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns the number of visible room from the player's room (1 mean only the player room is visible)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_RoomUnit",children:"Get Room Unit"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns the room unit size in unreal units"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_OcclusionCulling",children:"Is Occlusion Culling Enabled"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns true if the plugin's occlusion system is enabled"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_SetOcclusionDistance",children:"Set Occlusion Culling Distance"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Set the number of visible rooms from the player's room (1 mean only the player room is visible)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/Settings_OccludeDynamicActors",children:"Should Dynamic Actors Be Occluded"})}),(0,i.jsxs)(r.td,{children:["Procedural\xa0Dungeon\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Settings"]}),(0,i.jsx)(r.td,{children:"Returns true if actors with a RoomVisibility component should have their visibility toggled with the rooms"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/CompareDataTableRows",children:"Equal (Data Table Row Handle)"})}),(0,i.jsx)(r.td,{children:"Utilities"}),(0,i.jsx)(r.td,{})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.a,{href:"/ProceduralDungeon/api/DungeonBlueprintLibrary/IsDoorOfType",children:"Is Door Of Type"})}),(0,i.jsxs)(r.td,{children:["Utilities\xa0",(0,i.jsx)("br",{}),"\u2514\xa0\xa0Procedural\xa0Dungeon"]}),(0,i.jsx)(r.td,{})]})]})]})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>l});var i=n(6540);const t={},s=i.createContext(t);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);