"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[5900],{28366:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var t=o(74848),r=o(28453);const s={slug:"/api/ReadOnlyRoom/CountConnectedDoors",pagination_prev:null,pagination_next:null},d="Count Connected Doors",c={id:"api/Classes/ReadOnlyRoom/Nodes/CountConnectedDoors/CountConnectedDoors",title:"CountConnectedDoors",description:"Procedural Dungeon \u23f5",source:"@site/docs/api/Classes/ReadOnlyRoom/Nodes/CountConnectedDoors/CountConnectedDoors.md",sourceDirName:"api/Classes/ReadOnlyRoom/Nodes/CountConnectedDoors",slug:"/api/ReadOnlyRoom/CountConnectedDoors",permalink:"/ProceduralDungeon/api/ReadOnlyRoom/CountConnectedDoors",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"/api/ReadOnlyRoom/CountConnectedDoors",pagination_prev:null,pagination_next:null},sidebar:"homeSidebar"},i={},l=[{value:"Description",id:"description",level:2},{value:"Inputs",id:"inputs",level:2},{value:"Outputs",id:"outputs",level:2}];function a(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," \u23f5\r\n",(0,t.jsx)(n.a,{href:"/ProceduralDungeon/api/Classes/ReadOnlyRoom/",children:"Read Only Room"})," \u23f5\r\nCount Connected Doors"]}),"\n",(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"count-connected-doors",children:"Count Connected Doors"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Class:"})," ",(0,t.jsx)(n.a,{href:"/ProceduralDungeon/api/Classes/ReadOnlyRoom/",children:"Read\xa0Only\xa0Room"}),(0,t.jsx)(n.br,{}),"\n",(0,t.jsx)(n.strong,{children:"Category:"})," Room"]}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsx)(n.p,{children:"Returns true if all the doors of this room are connected to other rooms."}),"\n",(0,t.jsx)(n.p,{children:"Node"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:o(47678).A+"",width:"206",height:"76"})}),"\n",(0,t.jsx)(n.p,{children:"C++"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"int32 CountConnectedDoors() const\n"})}),"\n",(0,t.jsx)(n.h2,{id:"inputs",children:"Inputs"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Target"}),(0,t.jsx)(n.td,{children:"Read Only Room Interface"}),(0,t.jsx)(n.td,{})]})})]}),"\n",(0,t.jsx)(n.h2,{id:"outputs",children:"Outputs"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Return Value"}),(0,t.jsx)(n.td,{children:"Integer"}),(0,t.jsx)(n.td,{children:"Returns true if all the doors of this room are connected to other rooms."})]})})]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},47678:(e,n,o)=>{o.d(n,{A:()=>t});const t=o.p+"assets/images/nd_img_CountConnectedDoors-e41cf38fa57a4e87324290cd1b43b94b.png"},28453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>c});var t=o(96540);const r={},s=t.createContext(r);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);