"use strict";(self.webpackChunkprocedural_dungeon_wiki=self.webpackChunkprocedural_dungeon_wiki||[]).push([[2188],{9198:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=n(4848),s=n(8453);const t={},i="Room Observer Component",a={id:"api/Classes/RoomObserverComponent/RoomObserverComponent",title:"RoomObserverComponent",description:"Procedural Dungeon \u23f5",source:"@site/docs/api/Classes/RoomObserverComponent/RoomObserverComponent.md",sourceDirName:"api/Classes/RoomObserverComponent",slug:"/api/Classes/RoomObserverComponent/",permalink:"/ProceduralDungeon/api/Classes/RoomObserverComponent/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"homeSidebar",previous:{title:"GetRoom",permalink:"/ProceduralDungeon/api/RoomLevel/GetRoom"},next:{title:"RoomVisibilityComponent",permalink:"/ProceduralDungeon/api/Classes/RoomVisibilityComponent/"}},c={},l=[{value:"Class Details",id:"class-details",level:2},{value:"Description",id:"description",level:2}];function m(e){const o={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.a,{href:"/ProceduralDungeon/api/",children:"Procedural Dungeon"})," \u23f5\nRoom Observer Component"]}),"\n",(0,r.jsx)(o.h1,{id:"room-observer-component",children:"Room Observer Component"}),"\n",(0,r.jsx)(o.h2,{id:"class-details",children:"Class Details"}),"\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.strong,{children:"Defined in:"})," ",(0,r.jsx)(o.code,{children:"Public/Components/RoomObserverComponent.h"}),(0,r.jsx)(o.br,{}),"\n",(0,r.jsx)(o.strong,{children:"Hierarchy:"})," ",(0,r.jsx)(o.em,{children:"Object \u2192 Actor Component \u2192 Room Observer Component"}),(0,r.jsx)(o.br,{}),"\n",(0,r.jsx)(o.strong,{children:"Exposed in blueprint as:"})," Variable\xa0Type"]}),"\n",(0,r.jsx)(o.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(o.p,{children:["Room Observer that auto-(un)bind itself when it enters/exits a dungeon room.",(0,r.jsx)("br",{}),"Could observe (be bound) multiple rooms at once if the actor overlaps multiple room.",(0,r.jsx)("br",{}),"This component ",(0,r.jsx)(o.strong,{children:"does"})," track its own Room, thus the actor can move between rooms (use StaticRoomObserverComponent instead if this behavior is not needed)."]})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>a});var r=n(6540);const s={},t=r.createContext(s);function i(e){const o=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:o},e.children)}}}]);